Loading model
Loading dataset
Loading feat list
[38;20m2023-07-10 20:30:08,305 - usl - INFO - DATALOADER:
  BATCH_SIZE: 128
  WORKERS: 2
DATASET:
  NAME: cifar10
  ROOT_DIR: ../data
  TRANSFORM_NAME: CLD-cifar10
MODEL:
  ARCH: ResNet18
  BACKBONE_DIM: 512
  PRETRAIN_PATH: pretrained/cifar10_ckpt_epoch_200.pth
OPTS_IN_RUN_NAME: False
RECOMPUTE_ALL: True
RECOMPUTE_NUM_DEP: True
RUN_DIR: saved/cifar10_usl
RUN_NAME: cifar10_usl
SAVE_DIR: saved
SAVE_DIR_EXIST_OK: True
SKIP_SAVE: False
USL:
  KNN_K: 400
  K_MEANS_NITERS: 200
  NUM_SELECTED_SAMPLES: 256
  REG:
    ALPHA: 0.5
    EXCLUDE_SAME_CLUSTER: False
    HORIZON_DIST: 4
    HORIZON_NUM: 128
    MOMENTUM: 0.9
    NITERS: 10
    W: 0.5
  SEEDS: [1, 2, 3, 4, 5] (usl.py:17)[0m
Loading model
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00, 65.18it/s]
Loading dataset
Loading feat list
  0%|          | 0/192 [00:00<?, ?it/s]  1%|          | 1/192 [00:04<15:30,  4.87s/it]  2%|▏         | 3/192 [00:05<04:10,  1.32s/it]  3%|▎         | 5/192 [00:05<02:09,  1.44it/s]  4%|▎         | 7/192 [00:05<01:21,  2.27it/s]  4%|▍         | 8/192 [00:05<01:06,  2.77it/s]  5%|▍         | 9/192 [00:05<00:54,  3.37it/s]  5%|▌         | 10/192 [00:05<00:44,  4.07it/s]  6%|▌         | 11/192 [00:05<00:37,  4.85it/s]  6%|▋         | 12/192 [00:05<00:31,  5.65it/s]  7%|▋         | 14/192 [00:06<00:21,  8.17it/s]  9%|▉         | 17/192 [00:06<00:14, 11.87it/s] 10%|█         | 20/192 [00:06<00:11, 14.75it/s] 12%|█▏        | 23/192 [00:06<00:09, 16.96it/s] 13%|█▎        | 25/192 [00:06<00:09, 17.38it/s] 14%|█▍        | 27/192 [00:06<00:11, 14.77it/s] 15%|█▌        | 29/192 [00:06<00:12, 13.28it/s] 16%|█▌        | 31/192 [00:07<00:13, 12.11it/s] 17%|█▋        | 33/192 [00:07<00:13, 11.39it/s] 18%|█▊        | 35/192 [00:07<00:14, 11.04it/s] 19%|█▉        | 37/192 [00:07<00:13, 11.41it/s] 20%|██        | 39/192 [00:07<00:13, 11.17it/s] 21%|██▏       | 41/192 [00:08<00:13, 10.87it/s] 22%|██▏       | 43/192 [00:08<00:14, 10.57it/s] 23%|██▎       | 45/192 [00:08<00:14, 10.41it/s] 24%|██▍       | 47/192 [00:08<00:13, 10.87it/s] 26%|██▌       | 49/192 [00:08<00:13, 10.79it/s] 27%|██▋       | 51/192 [00:09<00:13, 10.66it/s] 28%|██▊       | 53/192 [00:09<00:13, 10.40it/s] 29%|██▊       | 55/192 [00:09<00:13, 10.26it/s] 30%|██▉       | 57/192 [00:09<00:13, 10.36it/s] 31%|███       | 59/192 [00:09<00:12, 10.69it/s] 32%|███▏      | 61/192 [00:09<00:12, 10.67it/s] 33%|███▎      | 63/192 [00:10<00:12, 10.57it/s] 34%|███▍      | 65/192 [00:10<00:12, 10.33it/s] 35%|███▍      | 67/192 [00:10<00:12, 10.21it/s] 36%|███▌      | 69/192 [00:10<00:10, 11.44it/s] 38%|███▊      | 72/192 [00:10<00:08, 14.18it/s] 39%|███▉      | 75/192 [00:10<00:07, 16.37it/s] 41%|████      | 78/192 [00:11<00:06, 18.08it/s] 42%|████▏     | 80/192 [00:11<00:06, 16.88it/s] 43%|████▎     | 82/192 [00:11<00:07, 14.47it/s] 44%|████▍     | 84/192 [00:11<00:08, 13.11it/s] 45%|████▍     | 86/192 [00:11<00:08, 12.04it/s] 46%|████▌     | 88/192 [00:12<00:09, 11.39it/s] 47%|████▋     | 90/192 [00:12<00:08, 11.60it/s] 48%|████▊     | 92/192 [00:12<00:08, 11.25it/s] 49%|████▉     | 94/192 [00:12<00:08, 10.98it/s] 50%|█████     | 96/192 [00:12<00:08, 10.68it/s] 51%|█████     | 98/192 [00:12<00:08, 10.47it/s] 52%|█████▏    | 100/192 [00:13<00:08, 10.27it/s] 53%|█████▎    | 102/192 [00:13<00:08, 10.77it/s] 54%|█████▍    | 104/192 [00:13<00:08, 10.71it/s] 55%|█████▌    | 106/192 [00:13<00:08, 10.55it/s] 56%|█████▋    | 108/192 [00:13<00:08, 10.39it/s] 57%|█████▋    | 110/192 [00:14<00:08, 10.24it/s] 58%|█████▊    | 112/192 [00:14<00:07, 10.74it/s] 59%|█████▉    | 114/192 [00:14<00:07, 10.65it/s] 60%|██████    | 116/192 [00:14<00:07, 10.57it/s] 61%|██████▏   | 118/192 [00:14<00:07, 10.33it/s] 62%|██████▎   | 120/192 [00:15<00:07, 10.18it/s] 64%|██████▎   | 122/192 [00:15<00:06, 10.33it/s] 65%|██████▌   | 125/192 [00:15<00:05, 13.11it/s] 67%|██████▋   | 128/192 [00:15<00:04, 15.45it/s] 68%|██████▊   | 131/192 [00:15<00:03, 17.31it/s] 70%|██████▉   | 134/192 [00:15<00:03, 17.47it/s] 71%|███████   | 136/192 [00:15<00:03, 16.20it/s] 72%|███████▏  | 138/192 [00:16<00:03, 15.72it/s] 73%|███████▎  | 140/192 [00:16<00:03, 14.76it/s] 74%|███████▍  | 142/192 [00:16<00:03, 13.94it/s] 75%|███████▌  | 144/192 [00:16<00:03, 14.03it/s] 76%|███████▌  | 146/192 [00:16<00:03, 13.62it/s] 77%|███████▋  | 148/192 [00:16<00:03, 13.12it/s] 78%|███████▊  | 150/192 [00:17<00:03, 13.44it/s] 79%|███████▉  | 152/192 [00:17<00:03, 13.09it/s] 80%|████████  | 154/192 [00:17<00:02, 12.89it/s] 81%|████████▏ | 156/192 [00:17<00:02, 13.28it/s] 82%|████████▏ | 158/192 [00:17<00:02, 13.11it/s] 83%|████████▎ | 160/192 [00:17<00:02, 12.77it/s] 84%|████████▍ | 162/192 [00:17<00:02, 13.22it/s] 85%|████████▌ | 164/192 [00:18<00:02, 13.01it/s] 86%|████████▋ | 166/192 [00:18<00:02, 12.78it/s] 88%|████████▊ | 168/192 [00:18<00:01, 13.21it/s] 89%|████████▊ | 170/192 [00:18<00:01, 12.93it/s] 90%|████████▉ | 172/192 [00:18<00:01, 12.77it/s] 91%|█████████ | 174/192 [00:18<00:01, 13.21it/s] 92%|█████████▏| 176/192 [00:19<00:01, 12.92it/s] 93%|█████████▎| 178/192 [00:19<00:01, 12.77it/s] 94%|█████████▍| 180/192 [00:19<00:00, 13.20it/s] 95%|█████████▍| 182/192 [00:19<00:00, 12.93it/s] 96%|█████████▌| 184/192 [00:19<00:00, 12.78it/s] 97%|█████████▋| 186/192 [00:19<00:00, 13.19it/s] 98%|█████████▊| 188/192 [00:19<00:00, 12.86it/s] 99%|█████████▉| 190/192 [00:20<00:00, 12.79it/s]100%|██████████| 192/192 [00:20<00:00, 13.52it/s]100%|██████████| 192/192 [00:20<00:00,  9.43it/s]
[33;20m2023-07-10 20:30:31,497 - usl - WARNING - File exists: saved/cifar10_usl/memory_feats_list.npy. Not overwriting (if the file is stale, please save manually). (nn_utils.py:82)[0m
[33;20m2023-07-10 20:30:33,336 - usl - WARNING - File exists: saved/cifar10_usl/d_knns_400.npy. Not overwriting (if the file is stale, please save manually). (nn_utils.py:82)[0m
[33;20m2023-07-10 20:30:33,337 - usl - WARNING - File exists: saved/cifar10_usl/ind_knns_400.npy. Not overwriting (if the file is stale, please save manually). (nn_utils.py:82)[0m
[38;20m2023-07-10 20:30:33,340 - usl - INFO - num_centroids: 256, final_sample_num: 256 (usl.py:63)[0m
feats_list: torch.Size([12271, 2048])
Calculating first order kNN density estimation
Partitions: 1
Running with indices: 0, 0
Running time: 1.71s
Running k-Means with seed 1
Use no init indices
Init indices [ 8414  8100  6817  9927   587   760   682  3876  5830   613  9213  7200
  8224  5628  8668  5131  8803 10884   656  3383  7559  8514  1632  7859
  5847  7567  1210  5115 10356   977  2003  7827  6881  6970  1241 10064
  4304 10105  9814  3965 10261  7690  9171 10386  2875  8890  4069  7976
  2142  2375 11793  6516 11792  8469 11882  4778  9657  5603 11374  1167
  5805  7910  2261  6437  3481  2756  1037  3798   501  4825   932 10994
   792  4131  3943  6043 11841  9946  3626  8897  1149  3563  9780  8472
  7901  6535  1080 10558   881  9388  3705   509  5068  3396   940  2157
  4133   630  7829  9670  3939  9304  5795  8381   185 11231  9071  9285
   726 11696  4287  8646  7734  5914 12124 11259   321  5811  2496  5151
  9331  6302 10719 11096  9624  7708  8379  1695  6076  7864  3322  8657
 10900  3454     3   569  6262  6572 11525 10282  5723  3208  9774  1690
 11082 11910  5709  6321 11797  2664  9494  3900  6912  3596  4790  3115
  3457  2785  9311  9849   104 11511  7892  7474  4894  6569  4960  7491
  9480  1969 10893  8916  1200    19  8311  5255 10759  6304  4377  3133
  1208  2265  6864  8113  9392  7785  8289  3824  5272  3751  5754  4849
  5528  1746  9448  3857 11647   500  2354  3337  1539  1015 11752 11309
  5419  1042 11313  3553  1768  8732 10746  1269 11518  1596 10894  8391
  5474 10930  1791 11299   555  8922  2516  9136  8404  5008  2341  5623
   681  6135  1061  6623  8855 10602 10611 11010   457  2801  4209 10276
   750  4093  8193  1267  6773  8819  2264  8162  1948   664  3179  7052
 11117  1533  3287  6886]
  0%|          | 0/200 [00:00<?, ?it/s]  3%|▎         | 6/200 [00:00<00:03, 59.19it/s]  6%|▋         | 13/200 [00:00<00:03, 59.89it/s] 12%|█▏        | 23/200 [00:00<00:02, 74.41it/s] 16%|█▌        | 31/200 [00:00<00:02, 71.66it/s] 20%|█▉        | 39/200 [00:00<00:02, 67.99it/s] 23%|██▎       | 46/200 [00:00<00:02, 64.14it/s] 26%|██▋       | 53/200 [00:00<00:02, 59.95it/s] 30%|███       | 60/200 [00:00<00:02, 57.37it/s] 33%|███▎      | 66/200 [00:01<00:02, 57.54it/s] 38%|███▊      | 76/200 [00:01<00:01, 66.13it/s] 42%|████▏     | 83/200 [00:01<00:01, 65.63it/s] 45%|████▌     | 90/200 [00:01<00:01, 64.63it/s] 48%|████▊     | 97/200 [00:01<00:01, 60.48it/s] 52%|█████▏    | 104/200 [00:01<00:01, 57.85it/s] 55%|█████▌    | 110/200 [00:01<00:01, 56.28it/s] 58%|█████▊    | 117/200 [00:01<00:01, 59.61it/s] 63%|██████▎   | 126/200 [00:01<00:01, 65.95it/s] 66%|██████▋   | 133/200 [00:02<00:01, 65.07it/s] 70%|███████   | 140/200 [00:02<00:00, 64.23it/s] 74%|███████▎  | 147/200 [00:02<00:00, 60.21it/s] 77%|███████▋  | 154/200 [00:02<00:00, 57.64it/s] 80%|████████  | 160/200 [00:02<00:00, 56.14it/s] 84%|████████▍ | 168/200 [00:02<00:00, 61.62it/s] 94%|█████████▍| 188/200 [00:02<00:00, 97.61it/s]100%|██████████| 200/200 [00:02<00:00, 69.49it/s]
[38;20m2023-07-10 20:30:36,238 - usl - INFO - Num of clusters: 256 counts: tensor([ 37,  42,  60,  44,  33,  35,  30,  61,  71,  33,  13,  26,   8,  59,
         80,  54,  41,  53,  14,  64, 113,  58,  24,  44,  56,  31,  35,  56,
         60,  48,  18,   9,  48,  33,  70,  38,  53,  32,  26,  21,  64,  60,
         50,  48,  47,  52,  54,  58,  51,  67,  40,  37,  56,  17,  65, 108,
         61,  97,  38,  34,  71,  20,   8,  42,  70,  58,  42,  74,  51,  40,
         47,  52,  18,  69,  60,  34, 252,  48,  80,  15,   7,  70,  26,  55,
         14,  61,  20,  56,  21,  70,  74,  31,  74,  85,  16,  39,  18,  10,
         73,  34,  41,  34,  74,  39,  26,  38,  48,  21,  39,  20, 118,  34,
        105,  61,  13,  48, 118,  59,  53,  16,  33,  32,  78,  43,  36,  33,
         43,  17,  72,  71,  29,  59,  52,  48,   6,  27, 196,  50,  50,  47,
         37,  23,  37,  68,  64,  45,  39,  10,  54,  61,  79,  58,  30,  46,
         24,  36,  42,   8,  33,  68,  26,  39,  64,  48,  77,  49,  66,  25,
         58,  49,  27, 138,  46,  23,  38,  49,  46,  22, 113,  45,  10,  45,
         28,  37, 108,  42,  67,  50,  22,  89,  26,  38,  45,  72,  96,  37,
         37,  37,  31,  71,  31,  38,  50,  45,  39,  20,  50,  56,  38,  30,
         69,  22,  36,  43,  23,  49,  60,  44,  54,  61,  18,  38,  56,  33,
         23,  45,  64,  79,  15,  60,  57,  40,  73,  63,  45,  36,  20,  33,
         65,  36,  35,  20,  45,  70,  28,  45,  29,  41,  23,  99,  60,  60,
         44,  48,  54,  48]) min: 6 max: 252 (nn_utils.py:361)[0m
[33;20m2023-07-10 20:30:36,238 - usl - WARNING - File exists: saved/cifar10_usl/cluster_labels_256_1.npy. Not overwriting (if the file is stale, please save manually). (nn_utils.py:82)[0m
[33;20m2023-07-10 20:30:36,238 - usl - WARNING - File exists: saved/cifar10_usl/centroids_256_1.npy. Not overwriting (if the file is stale, please save manually). (nn_utils.py:82)[0m
K-means for the Euclidean metric with 12,271 points in dimension 2,048, K = 256:
Timing for 200 iterations: 2.88320s = 200 x 0.01442s

Getting selections with regularization
  0%|          | 0/10 [00:00<?, ?it/s][38;20m2023-07-10 20:30:40,378 - usl - INFO - Max: 583.101806640625 Mean: 95.27239990234375 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:30:40,386 - usl - INFO - Min: 2.9440581798553467 (nn_utils_cifar.py:69)[0m
 10%|█         | 1/10 [00:04<00:37,  4.15s/it][38;20m2023-07-10 20:30:44,305 - usl - INFO - Max: 583.101806640625 Mean: 95.27667236328125 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:30:44,313 - usl - INFO - Min: 2.9440581798553467 (nn_utils_cifar.py:69)[0m
 20%|██        | 2/10 [00:08<00:32,  4.02s/it][38;20m2023-07-10 20:30:48,470 - usl - INFO - Max: 583.101806640625 Mean: 95.27667236328125 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:30:48,475 - usl - INFO - Min: 2.9440581798553467 (nn_utils_cifar.py:69)[0m
 30%|███       | 3/10 [00:12<00:28,  4.08s/it][38;20m2023-07-10 20:30:52,652 - usl - INFO - Max: 583.101806640625 Mean: 95.27667236328125 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:30:52,660 - usl - INFO - Min: 2.9440581798553467 (nn_utils_cifar.py:69)[0m
 40%|████      | 4/10 [00:16<00:24,  4.12s/it][38;20m2023-07-10 20:30:56,890 - usl - INFO - Max: 583.101806640625 Mean: 95.27667236328125 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:30:56,896 - usl - INFO - Min: 2.9440581798553467 (nn_utils_cifar.py:69)[0m
 50%|█████     | 5/10 [00:20<00:20,  4.16s/it][38;20m2023-07-10 20:31:01,283 - usl - INFO - Max: 583.101806640625 Mean: 95.27667236328125 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:31:01,290 - usl - INFO - Min: 2.9440581798553467 (nn_utils_cifar.py:69)[0m
 60%|██████    | 6/10 [00:25<00:16,  4.24s/it][38;20m2023-07-10 20:31:05,554 - usl - INFO - Max: 583.101806640625 Mean: 95.27667236328125 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:31:05,559 - usl - INFO - Min: 2.9440581798553467 (nn_utils_cifar.py:69)[0m
 70%|███████   | 7/10 [00:29<00:12,  4.25s/it][38;20m2023-07-10 20:31:10,005 - usl - INFO - Max: 583.101806640625 Mean: 95.27667236328125 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:31:10,013 - usl - INFO - Min: 2.9440581798553467 (nn_utils_cifar.py:69)[0m
 80%|████████  | 8/10 [00:33<00:08,  4.32s/it][38;20m2023-07-10 20:31:14,409 - usl - INFO - Max: 583.101806640625 Mean: 95.27667236328125 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:31:14,416 - usl - INFO - Min: 2.9440581798553467 (nn_utils_cifar.py:69)[0m
 90%|█████████ | 9/10 [00:38<00:04,  4.34s/it][38;20m2023-07-10 20:31:18,980 - usl - INFO - Max: 583.101806640625 Mean: 95.27667236328125 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:31:18,988 - usl - INFO - Min: 2.9440581798553467 (nn_utils_cifar.py:69)[0m
100%|██████████| 10/10 [00:42<00:00,  4.42s/it]100%|██████████| 10/10 [00:42<00:00,  4.28s/it]
[33;20m2023-07-10 20:31:18,998 - usl - WARNING - File exists: saved/cifar10_usl/selected_indices_256_1.npy. Not overwriting (if the file is stale, please save manually). (nn_utils.py:82)[0m
Class counts: 7
[18, 19, 4, 95, 42, 21, 57]
max: 95, min: 4
Number of selected indices: 256
Selected IDs:
array([ 8414,  7582,  7277, 11448,  5716,  4601,   570, 10517,  4911,
         613,  9353,  9416, 11767,  5534,  3702,  3013,  5654, 12245,
         367,  5670,  6487,  9264,  1490,   707,  5470,  6760,  5252,
        4052, 12206,   977,  3164,  7783,  7120,  7787, 10006,  9734,
        7170,  6645,   948,  5316, 10261,  7258,  9646, 11428,  3707,
        8885,  1153,  6703,  4712, 11808,  1754,  6625, 12001,  6638,
       11882,  3729,  9166,  6874, 10855,  9241,  5483,  5404,  2513,
        3539, 10365,  2206,   768,  6166,  8398,  4825,  1072,  3436,
        6260,  4142,  4766,  2761,  5441, 10299,  4081,  4317,   806,
        3273, 12251,  1510, 11080,  7642,  1387,  1870,  1080,  9388,
        3774,  9798,  9803,  7959,  8314,  2921,  2365,   680, 10375,
       10876,  3321,  9733,  3886, 11301,  6629, 11906, 10112,    20,
         160, 10882,  5512,  9408,  7632,  1290, 10987, 11905,  3232,
        3522,  3132,  1420,  9258, 11976, 10277, 10179, 11643,  6574,
        8365, 11625,  6287,  5504,  3630, 11328,  1036,  4687,   488,
         670,  3093,  7591, 11332,  9987,  5723,  6236,  7970, 10833,
         588,  5941,  3589,  4349,   718,  3339, 10462,  8179,  7367,
        2739,  8853,  6413,  1723,  2785,  9454,  9849,   498,  7630,
        7826,  2419,  5687, 11626,  2790,  4479, 11048,  4972,  5617,
        1842, 11148,   546,   611,  6107, 11646,  4085,  3683,  5100,
        7957,  4957,  1351, 10694,  1343,  6667,  6595,  2987,  3654,
        3751, 10677,  4849,  3473,  4986,  9479,  1902, 11647,   441,
       10212,  2628,  5933,    10, 10066,  4117,  9854,  8364, 10774,
        4779,  2732,  9125, 10074,  1585,  1281,  3388,  8809,  6517,
       11371, 11067,  3359, 11299,   521,  9702,  5535,  9136,  8178,
        5008,  2479,  2830,   187,  5831,  6594,   148,  9131, 10096,
       11591,  1323,  8350,  3024,  1839, 11417,   729,  6090,  4217,
        1267,  8417,  9057,  5412,  8261,   504,  8189,  1693,  6782,
       11248, 10789,  5845,  7502])
Running k-Means with seed 2
Use no init indices
Init indices [ 4706  9538 11128 11511 10479 12150  6583  8090  9004  1994  7906  3792
  1170   464  4093  2718 11465  9750  3607  8515  8513  1533  5282  6862
  7063  5113 11436  5633  4378  7798  5737 11637   219  3660  3184  5171
  5595  8086  3352  8335  3679  9573  4699  1902  1833  5698 10772  9329
 12105  9259  1291  8003   197  2983  5723  8550  9677  4054   401  6830
  7336   763  7894  9484  8149 11012  4630 11728  1175  4016   558 11757
  2396  2161  8185    92  1069  5512   549  5355  6387 11701   688  5251
  5765    51 11533  1777  8731  8557 10274  1177  5720  1425  3933 11720
  9318 10756  4214   865   977  1406 10496  8433  4440  3203  9186  7992
  9847  8827  2656  7532  3812  2254  6783  2119  5563 10634 10298  2266
  3100  6510   171  4515  5746 11108   356   895   522  2118  5961  6414
  2872 11208  7327  1143  8201  5365  5821  8576  9903   374  4245 11597
  8373  3109  8920  2302   936  5240  8543  9578   486  9796  1357  1575
  2615  7152  6715  5919  7773  6177  8878  6052  8180  9555    86  6402
  7177 11355  1794  3330  4671   422  5019  5232  2890   151  9407 10151
  9266  4412 10405  6891  3835 10824  7826  9178  5387  2877  9531  8638
 10596  2642 11139  1844  2128  7411  7457  8756  1432  5542 12000  2962
  7623  9925  2695 11920  2564  9042  3509  5167  3257  7288  1064  1746
  5953  5184  5695   830  5854  9144 10478  2814  1077  5354  9240  4508
  4771  7835  4735 12249 11842 11899  4223  3974 10138  9652 11505  6711
  6691  2306  7283   206  9055  9326  7301  8030  6674 10746  3518  8651
 10266  2251 11768  7415]
  0%|          | 0/200 [00:00<?, ?it/s]  3%|▎         | 6/200 [00:00<00:03, 59.07it/s]  8%|▊         | 16/200 [00:00<00:02, 81.12it/s] 12%|█▎        | 25/200 [00:00<00:02, 71.76it/s] 16%|█▋        | 33/200 [00:00<00:02, 69.58it/s] 20%|██        | 41/200 [00:00<00:02, 66.00it/s] 24%|██▍       | 48/200 [00:00<00:02, 64.13it/s] 28%|██▊       | 55/200 [00:00<00:02, 62.92it/s] 31%|███       | 62/200 [00:00<00:02, 64.29it/s] 36%|███▌      | 72/200 [00:01<00:01, 71.26it/s] 40%|████      | 80/200 [00:01<00:01, 68.98it/s] 44%|████▎     | 87/200 [00:01<00:01, 68.45it/s] 47%|████▋     | 94/200 [00:01<00:01, 65.87it/s] 50%|█████     | 101/200 [00:01<00:01, 64.13it/s] 54%|█████▍    | 108/200 [00:01<00:01, 62.89it/s] 57%|█████▊    | 115/200 [00:01<00:01, 62.05it/s] 62%|██████▏   | 124/200 [00:01<00:01, 68.75it/s] 66%|██████▌   | 131/200 [00:01<00:01, 68.61it/s] 69%|██████▉   | 138/200 [00:02<00:00, 67.05it/s] 72%|███████▎  | 145/200 [00:02<00:00, 65.99it/s] 76%|███████▌  | 152/200 [00:02<00:00, 64.16it/s] 80%|███████▉  | 159/200 [00:02<00:00, 62.95it/s] 83%|████████▎ | 166/200 [00:02<00:00, 61.67it/s] 88%|████████▊ | 177/200 [00:02<00:00, 74.64it/s] 98%|█████████▊| 196/200 [00:02<00:00, 105.73it/s]100%|██████████| 200/200 [00:02<00:00, 72.68it/s] 
[38;20m2023-07-10 20:31:21,790 - usl - INFO - Num of clusters: 256 counts: tensor([115,  32,  38,  49,  49,  25,   5,  46,  55,  24,  12,  47,  41, 239,
         14, 230,  34,  62,  59,   9,  90,  44,  60,  28,  34,  37,  41,   5,
         73,  44,  52,  38,  24,  54,  22,  82,  50,  47,  48,  19,  37,  57,
         65,  54,  47,  33,  48, 106,  48,  42,  87,  33,  42,  62,  34,  44,
         11,  76,  12,  58,  33,  25,  29,  70,  46,  97,  51,  39,  31,  59,
         42,  43,  38,  44,   5,  27,  86, 127,  43,  70,  45,  44, 106,  49,
         42,  23,  87,  58,  26,   6,  30,  57,  66,  40,  29,  25,  40,  58,
         72,  77,  71,  13,  49,  15,  21,  76,  59,  31,  51,  48,  58,  45,
         31,  32,  24,  79,  17,  37,  36,   3,  98,  12,  21,  29,  42,  69,
         35,  58,  32,  49,  42,  20,  21,  55, 117,  36,  21,  36,  32,  61,
         52,  32,  43,  55,  28,  55,  49,  38,  24,  25,  47,  48,  34,  49,
         50,  86,  79,  35,  53,  38,  86,  42,  30,  49,  37,  13, 101,  26,
         92,  34,  39,  71,  64,  35,  46,  27,  45,  66,  31,  93,  42,  45,
         39,  44,  60,  67,  61,  49,  37,  56,  51,  58, 110,  47,  84,  37,
         35,  73,  70,  28,  44,  81,  68,  38,   8,  66,  44,  12,  51,   1,
         40,  47,  60,  52,  38,  20,  63,  22,   6,  66,  63,   1,  52,  48,
         42,  52,  60,  23,  57,  10,  16,  41,  62, 102,  36,  40,   3,  21,
         86,  48, 102,  63,  30, 110,  37,  39,  29,  34,  27,  52,  64,  26,
         58,  71,  24,  35]) min: 1 max: 239 (nn_utils.py:361)[0m
[33;20m2023-07-10 20:31:21,791 - usl - WARNING - File exists: saved/cifar10_usl/cluster_labels_256_2.npy. Not overwriting (if the file is stale, please save manually). (nn_utils.py:82)[0m
[33;20m2023-07-10 20:31:21,791 - usl - WARNING - File exists: saved/cifar10_usl/centroids_256_2.npy. Not overwriting (if the file is stale, please save manually). (nn_utils.py:82)[0m
K-means for the Euclidean metric with 12,271 points in dimension 2,048, K = 256:
Timing for 200 iterations: 2.75431s = 200 x 0.01377s

Getting selections with regularization
  0%|          | 0/10 [00:00<?, ?it/s][38;20m2023-07-10 20:31:26,010 - usl - INFO - Max: 656.138427734375 Mean: 97.27133178710938 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:31:26,015 - usl - INFO - Min: 2.96874737739563 (nn_utils_cifar.py:69)[0m
 10%|█         | 1/10 [00:04<00:38,  4.23s/it][38;20m2023-07-10 20:31:30,515 - usl - INFO - Max: 656.138427734375 Mean: 97.27133178710938 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:31:30,522 - usl - INFO - Min: 2.96874737739563 (nn_utils_cifar.py:69)[0m
 20%|██        | 2/10 [00:08<00:35,  4.40s/it][38;20m2023-07-10 20:31:34,788 - usl - INFO - Max: 656.138427734375 Mean: 97.27133178710938 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:31:34,795 - usl - INFO - Min: 2.96874737739563 (nn_utils_cifar.py:69)[0m
 30%|███       | 3/10 [00:13<00:30,  4.34s/it][38;20m2023-07-10 20:31:39,130 - usl - INFO - Max: 656.138427734375 Mean: 97.27133178710938 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:31:39,137 - usl - INFO - Min: 2.96874737739563 (nn_utils_cifar.py:69)[0m
 40%|████      | 4/10 [00:17<00:26,  4.34s/it][38;20m2023-07-10 20:31:43,415 - usl - INFO - Max: 656.138427734375 Mean: 97.27133178710938 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:31:43,422 - usl - INFO - Min: 2.96874737739563 (nn_utils_cifar.py:69)[0m
 50%|█████     | 5/10 [00:21<00:21,  4.32s/it][38;20m2023-07-10 20:31:47,693 - usl - INFO - Max: 656.138427734375 Mean: 97.27133178710938 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:31:47,704 - usl - INFO - Min: 2.96874737739563 (nn_utils_cifar.py:69)[0m
 60%|██████    | 6/10 [00:25<00:17,  4.31s/it][38;20m2023-07-10 20:31:52,063 - usl - INFO - Max: 656.138427734375 Mean: 97.27133178710938 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:31:52,073 - usl - INFO - Min: 2.96874737739563 (nn_utils_cifar.py:69)[0m
 70%|███████   | 7/10 [00:30<00:12,  4.33s/it][38;20m2023-07-10 20:31:56,438 - usl - INFO - Max: 656.138427734375 Mean: 97.27133178710938 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:31:56,448 - usl - INFO - Min: 2.96874737739563 (nn_utils_cifar.py:69)[0m
 80%|████████  | 8/10 [00:34<00:08,  4.34s/it][38;20m2023-07-10 20:32:00,970 - usl - INFO - Max: 656.138427734375 Mean: 97.27133178710938 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:32:00,976 - usl - INFO - Min: 2.96874737739563 (nn_utils_cifar.py:69)[0m
 90%|█████████ | 9/10 [00:39<00:04,  4.40s/it][38;20m2023-07-10 20:32:05,429 - usl - INFO - Max: 656.138427734375 Mean: 97.27133178710938 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:32:05,435 - usl - INFO - Min: 2.96874737739563 (nn_utils_cifar.py:69)[0m
100%|██████████| 10/10 [00:43<00:00,  4.42s/it]100%|██████████| 10/10 [00:43<00:00,  4.36s/it]
Numpy file saved to: saved/cifar10_usl/selected_indices_256_2.npy
Class counts: 7
[19, 17, 4, 95, 39, 30, 52]
max: 95, min: 4
Number of selected indices: 256
Selected IDs:
array([ 9299,  8853, 11761,  5306, 11364,  1284,  7628,    95,  1899,
        6066,  6669,  1959,  3826,  3093,  6090, 10288, 11771, 10650,
        4977,  9567,  8872,  9101,  3194,  8049,  5664,  1786, 10532,
          87,  4378,  6924, 10044, 10774,    84,  2165,  3985,  1398,
        3744,  6765,  3616,  7384,  3550,  9573,  2999,  2315,  2600,
        2286,  4446,  7246,   857,  9265, 10027,  8003,   200,  3734,
        4331,  9517,   382,  4046,    66,  1279,  1369,  6903,  6987,
        1155,  7434, 10945,  5470, 11125,  1356, 10681,   558, 11332,
        4648,  2161, 10324,  5975, 12145,  5512,  2864,  2911,  6387,
         135,   688,  4567,  4141,   317, 10933,  7156,  8944,  8973,
       10753,  9389,  2392,  7541,  3933,  8397,  8814, 10756,  5873,
        9588,   977,  7850, 10496,  7458,  2477,  9421,  8758,  7296,
       11085, 11414,  6196, 11117,  4960, 10458,  7880,  9070,  2481,
       11906,  9825,  2276,  3100,  7553,   651,  7026,  4336,  7959,
         275,  8278,  1448,  3683,  4968,  7399,  3740, 10677,  4939,
        1329, 11347,  1855,  4955,  8576,  6143,   155,  4228,   717,
        6533,  2909,  6645,  6637,  1058, 12189,  8696,  9402,   367,
        1926,   900,  1153,  5875,  6737,  3997,  2238, 10433,  2991,
        9000, 11826, 10366,  1584,    86,  8129,  3729,   980,  3672,
        3330,   541,   416,  3730,  1935,  2890,   151,  7016, 10151,
        1692,  4707, 10934,  7066,  2255,  4117,  8287,  5257,  3665,
        5586,  8956,  9289,  9782,  2048, 10833,  2117,  3095, 10185,
        8179,  9053,  3589,  5413, 11501,  4103,  6689, 11591,  3751,
         492,  2269,  9042,  4889,  3612,  3774,  8540,  2980,  4986,
        5953,  4261, 12021, 11881,  3260,  9144, 10478,  2283,  6703,
        5354,  9037,  5741, 11426,  7539,  3484, 11990, 11013,  7911,
        2475,  1489, 10138,  9996, 11505,  1091, 12058,  5246,  1303,
        1025,  9125,  9326, 11677,  8030,  7988, 10942,  4911,  8651,
       10277,  2033, 11768,  7193])
Running k-Means with seed 3
Use no init indices
Init indices [ 6522  4929 11177  1054  7880  5807   116  1740 10580  1692   137 10682
  1096  2814 10317  5700  6556  4225  3816   759   402  2050  2206  6053
 10699   675  2203  3849   131  9129  5806 10382 10251  4244  9214 12157
 10164 12167  8680  4136   422  7675  1436  7606  9619 10288  9887 10458
 12005  3334   498 10367  6167  4993  9398  8072  2477   768  8537  1671
  3158 12114 10157 10479  4009  8682  8099  4107  9417  2614   256  2687
 10760  9698  2413  8785  9804  5730  1732  8580  7000  9470  9307  6546
  6788  5453  1070  3282  8967  5688  6078  5711  1956 10505  5131 10026
 11732  7309  1354 10280  3687   613  3419 11972   864   823  1882 11559
  5952  2103  9443  3731  8516 11697  3135 11747  7080  2139 10635  8375
 12258  9000 11310  7544  6913  7317  3411  7846  8338  1845  3877  8800
 10978  4816  6121  9579  5633 11072  7773  4151 10534  6095  7388 10459
  5022  9243 10299  2410  6958  6673   300  1945 12074  3241  7899  9506
  2898  1177  6220 10912 11613  1832  3437  6426  5606  4259  5406  4432
  2632 12147  3751   746  8971  1564  4766  3663  9894  5377   369  1295
  4398  2734  1982  1511   739 11383  5088  4877  4916 11436  2639  5400
  5276  4747  2258  9976  9485  8478  4431  1416   223  6818  4809  7263
 11264  8737  1429   470 10707  3523 12004   130  2232  5231  4453  6607
  1162  6345 11703  9617  2808   873  2062  5844  9369  8754  2368   358
 10452  8198  5014  2800 10877  4560 11583  8125  9169  3627  7041 11237
  6865 11657  1647   822  9133 11384  7473  7459  7902  9655 11590  2332
  5710  8744  4596 11927]
  0%|          | 0/200 [00:00<?, ?it/s]  4%|▎         | 7/200 [00:00<00:03, 60.53it/s]  9%|▉         | 18/200 [00:00<00:02, 82.02it/s] 14%|█▎        | 27/200 [00:00<00:02, 73.97it/s] 18%|█▊        | 35/200 [00:00<00:02, 71.08it/s] 22%|██▏       | 43/200 [00:00<00:02, 66.96it/s] 25%|██▌       | 50/200 [00:00<00:02, 64.82it/s] 28%|██▊       | 57/200 [00:00<00:02, 63.38it/s] 32%|███▏      | 64/200 [00:00<00:02, 63.95it/s] 37%|███▋      | 74/200 [00:01<00:01, 71.04it/s] 41%|████      | 82/200 [00:01<00:01, 68.90it/s] 44%|████▍     | 89/200 [00:01<00:01, 68.46it/s] 48%|████▊     | 96/200 [00:01<00:01, 65.94it/s] 52%|█████▏    | 103/200 [00:01<00:01, 64.22it/s] 55%|█████▌    | 110/200 [00:01<00:01, 63.02it/s] 58%|█████▊    | 117/200 [00:01<00:01, 62.17it/s] 64%|██████▎   | 127/200 [00:01<00:01, 70.93it/s] 68%|██████▊   | 135/200 [00:01<00:00, 69.91it/s] 72%|███████▏  | 143/200 [00:02<00:00, 68.01it/s] 75%|███████▌  | 150/200 [00:02<00:00, 66.44it/s] 78%|███████▊  | 157/200 [00:02<00:00, 64.58it/s] 82%|████████▏ | 164/200 [00:02<00:00, 63.28it/s] 86%|████████▌ | 171/200 [00:02<00:00, 62.36it/s] 94%|█████████▎| 187/200 [00:02<00:00, 87.70it/s]100%|██████████| 200/200 [00:02<00:00, 72.73it/s]
[38;20m2023-07-10 20:32:08,238 - usl - INFO - Num of clusters: 256 counts: tensor([ 41,  79,  58,  43,  39,  29,  19,  63,  76,  24,  25,  23,  29,  34,
         27,  19,  56,  64,  46,  76,  54,  39,  74,  19,  33,  97,  45,  37,
         32,  52,  40, 135,  40,  66,  51,  72,  58,  49,  51,  67,  29,  39,
         51,   1,  32, 193,  63,  45,  53,  60,  37,  46,  39,  71,  25,  83,
         27,  57,  56,  17,  57,  29,  88,  55,  26,  22,  57,  82,  30,  76,
         28,  94,  45,  48,  37,  28,  52,  37,  39,  30,  70,  35,  35,  31,
         42,  38,  37,  55,  30,  72,  68,  55,  62,  42,  40,  44,  45,  70,
         31,  29,  19,  31,  61,  73,  34,  38,  15,  54,  50,  27,  46,  70,
         12,  41,  49,  41,  35,  44,  49,  55,  95,  24,  55,  45,  50,  40,
         34,  29,  78,  29,  50,  39,  39,  38,  49,   2,  10,  64,  49,  39,
         74,  22,  38,  61,  61,  38,  55,  64,  52,  40,  17,  29,  95,  57,
         36,  52,  33,  51,   1,  39,  43, 118,  51,  52,  23,  21,  53, 107,
         84,  50,  68,  22,  41,  13,  47,  43,  52,  55,  37,  22,  54,  72,
         45,  27,  31,  51,  85,  53,  88,  63,  66,  33,  47,  29,  49,  53,
         37,  47,  56,  26,  35,  39,  46,  65,  69,  52,  17,  48,  73,  87,
         75,  22,  41,  41,  72,  27, 123,  56,  46,  25,  26,  44,  49,  41,
         13,  24,  56,  35,  37,  38,  70,  40,  64,  75,  12,  80,  53,  54,
         44,  83,  51,  60,  31,  12,  46,  69,  63,  36,  50,  28,  49,  48,
         74,  32,  44,  54]) min: 1 max: 193 (nn_utils.py:361)[0m
K-means for the Euclidean metric with 12,271 points in dimension 2,048, K = 256:
Timing for 200 iterations: 2.75338s = 200 x 0.01377s

Numpy file saved to: saved/cifar10_usl/cluster_labels_256_3.npy
Numpy file saved to: saved/cifar10_usl/centroids_256_3.npy
Getting selections with regularization
  0%|          | 0/10 [00:00<?, ?it/s][38;20m2023-07-10 20:32:12,375 - usl - INFO - Max: 740.9910278320312 Mean: 96.21622467041016 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:32:12,379 - usl - INFO - Min: 3.3631792068481445 (nn_utils_cifar.py:69)[0m
 10%|█         | 1/10 [00:04<00:37,  4.13s/it][38;20m2023-07-10 20:32:16,772 - usl - INFO - Max: 740.9910278320312 Mean: 96.19792938232422 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:32:16,779 - usl - INFO - Min: 3.971628427505493 (nn_utils_cifar.py:69)[0m
 20%|██        | 2/10 [00:08<00:34,  4.29s/it][38;20m2023-07-10 20:32:20,958 - usl - INFO - Max: 740.9910278320312 Mean: 96.19792938232422 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:32:20,961 - usl - INFO - Min: 3.971628427505493 (nn_utils_cifar.py:69)[0m
 30%|███       | 3/10 [00:12<00:29,  4.24s/it][38;20m2023-07-10 20:32:25,359 - usl - INFO - Max: 740.9910278320312 Mean: 96.19792938232422 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:32:25,365 - usl - INFO - Min: 3.971628427505493 (nn_utils_cifar.py:69)[0m
 40%|████      | 4/10 [00:17<00:25,  4.31s/it][38;20m2023-07-10 20:32:29,546 - usl - INFO - Max: 740.9910278320312 Mean: 96.19792938232422 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:32:29,552 - usl - INFO - Min: 3.971628427505493 (nn_utils_cifar.py:69)[0m
 50%|█████     | 5/10 [00:21<00:21,  4.26s/it][38;20m2023-07-10 20:32:33,722 - usl - INFO - Max: 740.9910278320312 Mean: 96.19792938232422 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:32:33,727 - usl - INFO - Min: 3.971628427505493 (nn_utils_cifar.py:69)[0m
 60%|██████    | 6/10 [00:25<00:16,  4.23s/it][38;20m2023-07-10 20:32:37,932 - usl - INFO - Max: 740.9910278320312 Mean: 96.19792938232422 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:32:37,937 - usl - INFO - Min: 3.971628427505493 (nn_utils_cifar.py:69)[0m
 70%|███████   | 7/10 [00:29<00:12,  4.23s/it][38;20m2023-07-10 20:32:42,178 - usl - INFO - Max: 740.9910278320312 Mean: 96.19792938232422 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:32:42,183 - usl - INFO - Min: 3.971628427505493 (nn_utils_cifar.py:69)[0m
 80%|████████  | 8/10 [00:33<00:08,  4.23s/it][38;20m2023-07-10 20:32:46,167 - usl - INFO - Max: 740.9910278320312 Mean: 96.19792938232422 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:32:46,174 - usl - INFO - Min: 3.971628427505493 (nn_utils_cifar.py:69)[0m
 90%|█████████ | 9/10 [00:37<00:04,  4.16s/it][38;20m2023-07-10 20:32:50,148 - usl - INFO - Max: 740.9910278320312 Mean: 96.19792938232422 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:32:50,155 - usl - INFO - Min: 3.971628427505493 (nn_utils_cifar.py:69)[0m
100%|██████████| 10/10 [00:41<00:00,  4.10s/it]100%|██████████| 10/10 [00:41<00:00,  4.19s/it]
Numpy file saved to: saved/cifar10_usl/selected_indices_256_3.npy
Class counts: 7
[13, 19, 6, 91, 44, 36, 47]
max: 91, min: 6
Number of selected indices: 256
Selected IDs:
array([ 8020,  4228,  8881,  1054,  1097,  4116,   182,  4873, 10462,
        1595,   137, 11866,   367,  2814, 10317,  4372, 11641,  8342,
        3086,   759,   906,  3273,  4059,  6186, 10980, 10087,  3484,
        3622,    44,  8974,  5036,  9636,  7166, 11505,  1596, 10151,
        9810,  5688,  1510,  2343,   416,  8171,  7277,  7606,  8672,
        6902, 10233, 11818, 11164,  4377,  1646,  7956,  6167,  6143,
        9186, 10277,   789,   768,  8537,  7014,   977,   509,  8820,
       11195, 10835,  2172,  1468,  2870,  8667,  4046,   674,  5411,
        5392,  8871,  3774,  9057, 10667,  3477,  1958,  9381,  8230,
        2404,  9733,  1981,  8245,  3734,   729,  3180,  9388,  6571,
        2754,  5711,  2960, 12187,   943, 10026,  3567,  7865, 11301,
       11947,  1757,   613,  8725,  5810,  1369,  9921,  1882,  9529,
        7591,  1254,  9125,  8052,  9533, 11965,  4214,  6667,  8356,
        4331,  1356,  2367, 11015,  9000,   857,  5452,  6924,  7696,
        6059,  7188,  9479,  6385,  2016,  9279,  1398,  3555,  1739,
        9570,    87,  5257,  6948,  8278, 10783,  6090,  7787, 11309,
        3278,  9732, 11477,  5626,  6587,  1329,   300,  6528,  7327,
        3383,  7162,  9258,  4401,   707, 11345,  4717, 11761,  4593,
        5892, 11013,  6474,  3357,  4986,  3073,  9782,  7755,  6728,
        6769,  9490,  7850, 10964,  4703,   714,  4951,  6479,  6864,
        6418,  5586,  1773,  8349,  9793, 10355,  5268,  9588,  3058,
       11137, 10365,  2442,  5696,  4198,  3013,  6910,  9646,  8478,
        4431,   985,  5100,  5624,  3262,  5299, 11591,  9131,  9416,
         213, 11095,  3232,  9507,    48,  6004,  5231,  5356,  1215,
        7684, 11922, 10876,  8589,  8588,  8261,  2657,  6137,   174,
        9623,  1735,  2788, 10494,  8057,  2892,  4687, 10542,  3185,
       11583,  3918,  8885,  1826,  7273, 12020, 11317, 10622,  1490,
        7539,  7170, 11437,  7285, 10366,  8161,  9041,  3641,  1706,
        6033,  9179,  4596,  7560])
Running k-Means with seed 4
Use no init indices
Init indices [ 8431  9925  9110  9764 10240  7179 10115 11687   917 10984   953  2927
 10766  6830  1733 11590 10428  8264  9206  8559  9962 10401 11505  5349
  9937  5879  5907  2947  6196  9094 12035  2904  5447 10204  7125  1959
 11287  9401  9902  7365  9058  2052 10901  5781 12223  9851  5496  2018
  6985  6476   639 11691  6378  1546  9023  9074 10692  9060  2171 10909
   504  5140  5932  6257 11972  1835  6158  5180  3765 11014 11718  4651
  9292  5979  8209  1393   286  6791 11632 10490  5085 10467  8691  1605
  5173 12198  8628  6334  7797  5363 11763  3360  7006  7593  8832  1325
  7342  1273  8545  4106  2764 11288  9244  4392  6175   805 11650  3521
  9600  5445  3106 10703  9153 10815  2037   118 10214  1001  1049  7495
  4714  2487  7036 12236  6534  3965  7441  2353  7379  9664  1232   178
  9057  6671  6607 11011 10895  7498  3693   123 11195  3811  6730   185
  1502  2992  9183  3347  4859 10275  7707 10950  8980   419  8648  7331
   715  7786 10185  1158 10282 10757  7734 12023  9204  6041 11639 11311
  2912  9895  1237  6073  8605 11021 11282  3168 11027  6221  5666  4069
  2695  9584  6429  9086  6237  6817  5241  5046  9397  2809  4340   103
   186  9053  6736 10472  8950  8133  6461 10886  4836  5502  6702  1559
  4989  8310  3392   783  2440   170  2624  1556  1282  1866  2457  1385
  8714  3635  1146  4708  4971  6496  3876 10642  3053  2420  9068  1591
  7092 10441   343  5922  5519  8031 11570  1299  4177 10173  5174  4670
 11753  3252  8625  2214 11730  5182  7333 11444   219  4753   144 10510
  3927  6827  1392 12259]
  0%|          | 0/200 [00:00<?, ?it/s]  3%|▎         | 6/200 [00:00<00:03, 57.77it/s]  6%|▋         | 13/200 [00:00<00:03, 59.33it/s] 12%|█▏        | 23/200 [00:00<00:02, 73.44it/s] 16%|█▌        | 31/200 [00:00<00:02, 70.12it/s] 20%|█▉        | 39/200 [00:00<00:02, 68.74it/s] 23%|██▎       | 46/200 [00:00<00:02, 65.90it/s] 26%|██▋       | 53/200 [00:00<00:02, 64.08it/s] 30%|███       | 60/200 [00:00<00:02, 62.85it/s] 34%|███▎      | 67/200 [00:01<00:02, 62.03it/s] 38%|███▊      | 77/200 [00:01<00:01, 71.62it/s] 42%|████▎     | 85/200 [00:01<00:01, 70.31it/s] 46%|████▋     | 93/200 [00:01<00:01, 67.97it/s] 50%|█████     | 100/200 [00:01<00:01, 66.71it/s] 54%|█████▎    | 107/200 [00:01<00:01, 64.76it/s] 57%|█████▋    | 114/200 [00:01<00:01, 63.38it/s] 60%|██████    | 121/200 [00:01<00:01, 62.48it/s] 68%|██████▊   | 136/200 [00:01<00:00, 85.59it/s] 78%|███████▊  | 156/200 [00:02<00:00, 116.07it/s] 88%|████████▊ | 176/200 [00:02<00:00, 138.01it/s] 98%|█████████▊| 196/200 [00:02<00:00, 153.48it/s]100%|██████████| 200/200 [00:02<00:00, 87.60it/s] 
[38;20m2023-07-10 20:32:52,503 - usl - INFO - Num of clusters: 256 counts: tensor([ 17,  68,  66,  29,  45,  64,  66,  46,  41,  34,  34,  31,  39,  73,
         33,  70,  74,  24,  50,  55,  43,  46,  72,  48,  63, 133, 100,   1,
         67,  34, 170,  38,  62,  35,  38,  60,  38,  50,  50,  25,  48,  44,
         50,  44,  53,  78,  68,  52,  32,  20,  25,  68,  47,  12,  35,  14,
         35,  33,  26,  49,  45,  37,  33,  71,  80,  32,  53,  54,  78,  44,
        120,  65, 111,  43,  79,  48,  22,  52,  50,  19,  19,  55,  31,  45,
         55,  67,  26,  39,  60,  35,  72,  53,  30,  46,  15,  39,  45,  68,
         19,  82,  63,  38,  23,  83,  40,   8,  31,  69,  18,  30,  27,  46,
         14,  51,  67,  49,  55,  26,   8,  70,  87,  64,  29,  25,  18,  14,
         82,  44,  42,  31,  44,  35,  28,  54,  21,  63,  92,  29,  56,  20,
         64,  26,  15,  21,  37,  33,  14,  49,  33,  28,  27,  50,  21,  27,
         25,  20,  55,  57,  72,  22,  43,  94, 105,  24,  16,  68,  59,  23,
        142,  27, 103,  32,  50,  35,  83,  78,  34,  75,   2,  86,  19,  33,
         21,  65,  42,  36, 136,  50,  32,  30, 107,  21,  35,  28,  44, 100,
         20,  33,  70,  53,  46,  48,  55,   1,  16,  65,  41,  41,  81,  30,
         50,  17,  41,  47,  98,  54, 141,  34,  25,  59,  53,  41,  43,  45,
         47,  55,  57,  35,  46,  54,  23,  59,  47, 103,  41,  55,   2,  65,
         50,  44,  24,  27,  15, 245,  50,  23,  36,  28,  32,  25,  19,  49,
         16,  50,  45,  86]) min: 1 max: 245 (nn_utils.py:361)[0m
K-means for the Euclidean metric with 12,271 points in dimension 2,048, K = 256:
Timing for 200 iterations: 2.28645s = 200 x 0.01143s

Numpy file saved to: saved/cifar10_usl/cluster_labels_256_4.npy
Numpy file saved to: saved/cifar10_usl/centroids_256_4.npy
Getting selections with regularization
  0%|          | 0/10 [00:00<?, ?it/s][38;20m2023-07-10 20:32:56,646 - usl - INFO - Max: 620.2347412109375 Mean: 97.39215087890625 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:32:56,652 - usl - INFO - Min: 3.641989231109619 (nn_utils_cifar.py:69)[0m
 10%|█         | 1/10 [00:04<00:37,  4.15s/it][38;20m2023-07-10 20:33:00,772 - usl - INFO - Max: 620.2347412109375 Mean: 97.38616180419922 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:33:00,777 - usl - INFO - Min: 4.312279224395752 (nn_utils_cifar.py:69)[0m
 20%|██        | 2/10 [00:08<00:33,  4.14s/it][38;20m2023-07-10 20:33:05,223 - usl - INFO - Max: 620.2347412109375 Mean: 97.38616180419922 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:33:05,230 - usl - INFO - Min: 4.312279224395752 (nn_utils_cifar.py:69)[0m
 30%|███       | 3/10 [00:12<00:29,  4.28s/it][38;20m2023-07-10 20:33:09,421 - usl - INFO - Max: 620.2347412109375 Mean: 97.38616180419922 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:33:09,426 - usl - INFO - Min: 4.312279224395752 (nn_utils_cifar.py:69)[0m
 40%|████      | 4/10 [00:16<00:25,  4.25s/it][38;20m2023-07-10 20:33:13,765 - usl - INFO - Max: 620.2347412109375 Mean: 97.38616180419922 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:33:13,775 - usl - INFO - Min: 4.312279224395752 (nn_utils_cifar.py:69)[0m
 50%|█████     | 5/10 [00:21<00:21,  4.28s/it][38;20m2023-07-10 20:33:18,020 - usl - INFO - Max: 620.2347412109375 Mean: 97.38616180419922 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:33:18,027 - usl - INFO - Min: 4.312279224395752 (nn_utils_cifar.py:69)[0m
 60%|██████    | 6/10 [00:25<00:17,  4.27s/it][38;20m2023-07-10 20:33:22,267 - usl - INFO - Max: 620.2347412109375 Mean: 97.38616180419922 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:33:22,273 - usl - INFO - Min: 4.312279224395752 (nn_utils_cifar.py:69)[0m
 70%|███████   | 7/10 [00:29<00:12,  4.26s/it][38;20m2023-07-10 20:33:26,521 - usl - INFO - Max: 620.2347412109375 Mean: 97.38616180419922 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:33:26,527 - usl - INFO - Min: 4.312279224395752 (nn_utils_cifar.py:69)[0m
 80%|████████  | 8/10 [00:34<00:08,  4.26s/it][38;20m2023-07-10 20:33:30,923 - usl - INFO - Max: 620.2347412109375 Mean: 97.38616180419922 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:33:30,930 - usl - INFO - Min: 4.312279224395752 (nn_utils_cifar.py:69)[0m
 90%|█████████ | 9/10 [00:38<00:04,  4.30s/it][38;20m2023-07-10 20:33:35,162 - usl - INFO - Max: 620.2347412109375 Mean: 97.38616180419922 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:33:35,173 - usl - INFO - Min: 4.312279224395752 (nn_utils_cifar.py:69)[0m
100%|██████████| 10/10 [00:42<00:00,  4.29s/it]100%|██████████| 10/10 [00:42<00:00,  4.27s/it]
Numpy file saved to: saved/cifar10_usl/selected_indices_256_4.npy
Class counts: 7
[18, 14, 6, 89, 43, 35, 51]
max: 89, min: 6
Number of selected indices: 256
Selected IDs:
array([ 6694, 11591, 10833, 11236, 10484,  8363,  7178,   768,  1029,
       10150,  1258,  3539, 11166,  5443,  4607, 11771, 11942,  8264,
        9388,  8559,  6940,  8474,  2213,  3948,  9796,  4939,  4964,
        2947,  4174,  9471,  7945,  8649,  7449, 11969,   825,  2033,
       12062,  9260, 10033,  7524,  8783,  6166, 10418,  3273,  6698,
       10212,  1693,  6227,  8136, 12173,   205,  1224,  2094,   174,
        9166,  9009, 11364,  9060,  3321, 11906,  8153,  4336,  8000,
        1483,  9646,  1723,  3916,  3017,  5831,  2473,  4593, 11922,
        9588,  6430, 12034,  6551,  3589,  5790,  7286,  9847,  3552,
       10753,  8949,   167,  9279, 12198,  8944,  4968,    90,  2582,
        1735,  4911,  8435,  6595,  8495,  2935,  3751,  6750,  9372,
        6038,  3774,  6881,  8883,  2576, 10658,   882,  7149,  2870,
        3167,  1513,  2052, 11115,  8470, 11096, 10223,   498, 12045,
        1328,  1364, 10066,  3729,  3185,  6953,  7088,  6946,  3313,
        7865,  4275,  7440,  9657,  5846,   570,  9187,  8245,  7367,
        4667, 10151, 11013,  3671,  5587, 10303,  6861,  6638,   416,
         190,  1974,  8822,  5795,  5247, 11285,  6972, 10950,    96,
        9298,  9319, 11643,  1487, 10542,  6681,  1164, 10612, 10573,
       12230, 12104,  1537,  5532, 10277,  8456,   464, 11182,  3058,
        2206,  9131,  9932,  9360,  3362,  6780,  4107,  8592,  4046,
        2871,  9540,  3788,  9598,   922,  8328,  9437,  5046,  8507,
        5265,  3134,  4040,   317,  8853,  7973, 10472,  9282,  7277,
       10462, 10945,  4586,  1855,  4872,  1559,  2897,  8916,  4986,
        5427,  6386,    59,  2293,  6199,  6619,  1762,  2392,   151,
        5490,  4960,   467,  5036,  5736,  6925,  3876,  8432,  2812,
        4249,  1032,   173,  5972, 11117,   275,  3519,  4635,  6208,
        9859, 10693,  2020,   861,  2572,  3683, 12036,  4091,  8825,
        1270,  7457,  4395,  7595, 10373,    70,  7014,  8101,  4980,
        1414,  6924,   558, 11407])
Running k-Means with seed 5
Use no init indices
Init indices [ 8982  1765  3803 10364  3351  3517 10863  9600  1316  3631 10199  2401
  5940  1911  6226  5087  7849 11159  9145   488  4323  6168  4609 11354
  1753  9398  7602  8368  9141  3459 12187  1125  3682 11259  9098  4912
  4218  8541  2556  6216  8249  7874  9494  4302  4377  2879  3375  2793
  9164   329  4017 12093  9420  5278  2061 11514  4188  9979  1434 10605
  4102 11758 12010  1681  2637  4472 11745  6139  6531  8516  6425  2677
  2117  9722 11803  2667 12250 10954 10145  4138  9103  7064  2248   640
  5194  6260  8235  6471  7330  8621  6741   218  5107  5607  4965 10719
 11144  2487  9787  6942  1279 11192  2371  3098  5204  3036  8678  5003
  3556  2772  7647  5022  6198  9643  8713  4850  9225  2933 11072 10359
 11256  9231  3333 10275  9948  7314   646  4106  9211 10434 11100     4
  6857 11707  8869  5882 10042  4269 12248  1484   791  6062  7644 10930
  8446 11085  8818  2942  7589 10361  8311  3820 11277  1234 11075  6873
  3564  9156  1272  1401 12261  7347  5325  5611  9286  4590   484  9985
  4671  8627  1273  6403  5692  4303 10908  6142  1857  7061  1843  9432
  3136  7539  3945   625 11261  6632 11906  1775  4738  8585  5426  3048
 10698   403 10175  7990  2947 12169  7911  1795  3592  6823 11313  4169
  6847  4032  4557 10874  4244  3503  3906  3577  2633  6258 10992  6248
  5539  6440  9809  7824 10909  6663  3093  3570  1331  6315  8060  6912
  5547 10258   743  2991  2112  8636  6240  4708  3008 11284   860  8010
  7741  8493  2497 12210   823  7385  3186   761  9343  1607  5205  9312
  1045    48  7764  2288]
  0%|          | 0/200 [00:00<?, ?it/s]  3%|▎         | 6/200 [00:00<00:03, 59.20it/s]  6%|▋         | 13/200 [00:00<00:03, 59.87it/s] 10%|█         | 21/200 [00:00<00:02, 67.11it/s] 20%|██        | 41/200 [00:00<00:01, 115.54it/s] 30%|███       | 61/200 [00:00<00:00, 142.49it/s] 40%|████      | 81/200 [00:00<00:00, 158.93it/s] 50%|█████     | 101/200 [00:00<00:00, 169.74it/s] 60%|█████▉    | 119/200 [00:00<00:00, 157.98it/s] 68%|██████▊   | 135/200 [00:01<00:00, 111.82it/s] 74%|███████▍  | 149/200 [00:01<00:00, 92.11it/s]  80%|████████  | 160/200 [00:01<00:00, 82.17it/s] 85%|████████▌ | 170/200 [00:01<00:00, 83.00it/s] 90%|█████████ | 180/200 [00:01<00:00, 77.64it/s] 94%|█████████▍| 189/200 [00:01<00:00, 74.40it/s] 98%|█████████▊| 197/200 [00:02<00:00, 71.42it/s]100%|██████████| 200/200 [00:02<00:00, 94.86it/s]
[38;20m2023-07-10 20:33:37,351 - usl - INFO - Num of clusters: 256 counts: tensor([ 60,  89,  89,  63,  49,  65,  44,  23,  34,   1,  37,  90,  45,  51,
        100,  25,  84,  63,  31,  35,  30,  42,  27,  43,  46,  30,  20,  60,
         80,  59,  47,  65,  62,  47,   2,  30,  31,  32,  27,  34,  20,  43,
         67,  63,  93,  11,  28,  44,  51,  38,  19,  49,  14,  32,  39,  49,
         59,  77,  47,  29,  35,  30,  68,  58,  54,  37,  48,  56,  29,  33,
         70,  65,  43,  15,  60,  49,  36,  49,  31,   6,  60,   1,  40,  63,
         38,  32,  36,  29,  42,  28,  37,  39,  58,  22,  37,  83,  58,  38,
         26,  56,  76,  10,  42,  31,  32,  26,  56,  25,  58,  52,  64,  76,
         48,  39,  44,  80,  55,  31,  57,  34,  57,  83, 118,  21,  23,  56,
          2,  73,  36,  35,  82,  18,  22,  10,  15,  48,  28,  38,  63,  60,
         51,  96,  41,  38,  73,  40,  50,  28,  28,  15,  45,  85,  31,  65,
         75, 149,  25,  60,  10,  27,  41,  76, 132,  70,  72,  38,  45,  76,
         29,  32,  55,  35,  54,  45,  19,  50,  74,  35,  23,  28,  48,  32,
         51,  23,  73,  30,  72,   3,  49,  34,  65,  29,  60,  31,  52,  50,
         86,  43,  71,  36,  34,  31,  21,  40,  42,  54,  76,  45,  76,  47,
         53,  18,  42,  42,  77, 132, 112,  13,  43,  62,  41,  77, 195,  35,
         34,  54, 132,  49,  51,  56,  33,  33,   1,  39,  85,  43,  72,  78,
        128,   1,  47,  55,  64,  41,  37,  30,  41,  36,  39,  27,  82,  44,
         24,  26,  68,  31]) min: 1 max: 195 (nn_utils.py:361)[0m
K-means for the Euclidean metric with 12,271 points in dimension 2,048, K = 256:
Timing for 200 iterations: 2.11081s = 200 x 0.01055s

Numpy file saved to: saved/cifar10_usl/cluster_labels_256_5.npy
Numpy file saved to: saved/cifar10_usl/centroids_256_5.npy
Getting selections with regularization
  0%|          | 0/10 [00:00<?, ?it/s][38;20m2023-07-10 20:33:41,479 - usl - INFO - Max: 619.030029296875 Mean: 95.71027374267578 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:33:41,484 - usl - INFO - Min: 3.4452648162841797 (nn_utils_cifar.py:69)[0m
 10%|█         | 1/10 [00:04<00:37,  4.13s/it][38;20m2023-07-10 20:33:45,871 - usl - INFO - Max: 619.030029296875 Mean: 95.71027374267578 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:33:45,877 - usl - INFO - Min: 3.4452648162841797 (nn_utils_cifar.py:69)[0m
 20%|██        | 2/10 [00:08<00:34,  4.28s/it][38;20m2023-07-10 20:33:50,129 - usl - INFO - Max: 619.030029296875 Mean: 95.71027374267578 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:33:50,135 - usl - INFO - Min: 3.4452648162841797 (nn_utils_cifar.py:69)[0m
 30%|███       | 3/10 [00:12<00:29,  4.27s/it][38;20m2023-07-10 20:33:54,320 - usl - INFO - Max: 619.030029296875 Mean: 95.71027374267578 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:33:54,323 - usl - INFO - Min: 3.4452648162841797 (nn_utils_cifar.py:69)[0m
 40%|████      | 4/10 [00:16<00:25,  4.24s/it][38;20m2023-07-10 20:33:58,487 - usl - INFO - Max: 619.030029296875 Mean: 95.71027374267578 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:33:58,493 - usl - INFO - Min: 3.4452648162841797 (nn_utils_cifar.py:69)[0m
 50%|█████     | 5/10 [00:21<00:21,  4.21s/it][38;20m2023-07-10 20:34:02,346 - usl - INFO - Max: 619.030029296875 Mean: 95.71027374267578 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:34:02,352 - usl - INFO - Min: 3.4452648162841797 (nn_utils_cifar.py:69)[0m
 60%|██████    | 6/10 [00:24<00:16,  4.09s/it][38;20m2023-07-10 20:34:06,335 - usl - INFO - Max: 619.030029296875 Mean: 95.71027374267578 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:34:06,338 - usl - INFO - Min: 3.4452648162841797 (nn_utils_cifar.py:69)[0m
 70%|███████   | 7/10 [00:28<00:12,  4.06s/it][38;20m2023-07-10 20:34:10,456 - usl - INFO - Max: 619.030029296875 Mean: 95.71027374267578 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:34:10,462 - usl - INFO - Min: 3.4452648162841797 (nn_utils_cifar.py:69)[0m
 80%|████████  | 8/10 [00:33<00:08,  4.08s/it][38;20m2023-07-10 20:34:14,360 - usl - INFO - Max: 619.030029296875 Mean: 95.71027374267578 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:34:14,366 - usl - INFO - Min: 3.4452648162841797 (nn_utils_cifar.py:69)[0m
 90%|█████████ | 9/10 [00:37<00:04,  4.02s/it][38;20m2023-07-10 20:34:18,564 - usl - INFO - Max: 619.030029296875 Mean: 95.71027374267578 (nn_utils_cifar.py:58)[0m
[38;20m2023-07-10 20:34:18,575 - usl - INFO - Min: 3.4452648162841797 (nn_utils_cifar.py:69)[0m
100%|██████████| 10/10 [00:41<00:00,  4.08s/it]100%|██████████| 10/10 [00:41<00:00,  4.12s/it]
Numpy file saved to: saved/cifar10_usl/selected_indices_256_5.npy
Class counts: 7
[17, 16, 4, 94, 41, 27, 57]
max: 94, min: 4
Number of selected indices: 256
Selected IDs:
array([12145,  3729,  7378,   717,  1706,   376, 11646,  8883,  7318,
        3631, 11102, 11371,  3311,  6026,  6874,  8153,   870,  1135,
        9500,   416,  4957, 11761,  2492, 10494,  1596,  9313,   492,
        9859,  9141,  3459, 10756,  6154,  3751,   409,  9098,  4954,
        2700, 12264,  5956,  1212,  7323,  8435,  3612,  4089,  3134,
        3865,  2178,  8450,  6477,   304,  5185, 11468,  8701,  2385,
        2061,  2923,  5290, 10945,  6948, 10331,  5463,   444,  8208,
        8649,  2440,  4301, 10181,  6143,  6533,  9381,  3185,  4160,
        2260,  9447,  1099,  6166, 10901, 11551, 11565,  3963,  9258,
        7064,  4607,  2628,  2653,  6260,  6924,  3822,  7330, 10733,
        6913,   367,  2137,  2741,  2238,  6681, 10534,  3480, 11305,
        7562,  6230, 10739,  7894,  4758,  3619,  3915,  8474,  4207,
        4324,  5299,  8844,  1248,  3215,  9531,  1029, 10462, 12048,
        2147,  5181, 10934, 10785,  3201,  5490,   497, 11965,  6734,
         646,  6038,  9060, 11765,  2249,  1466,  6779, 11485,  9541,
        8104, 12251,  5785, 11294,  8513,   729,  3232, 11095,  9689,
        7865,   930,  4477,  2518, 10182, 10214,  1356,  1025,  6585,
        9289,  9440,  6873,  5318, 11048,   172, 12036, 10867,  2789,
        3073,  2373,  8179,  4590,   317,  9360, 11731,  7939, 10006,
        6407,  5276,  3641,  1281, 11922,  4278,  6587,    95,  8549,
        2206,  6673,  3774,  1440, 11073, 10844, 10066,  5806,  3260,
        8573,   707,  4986, 10261,   613, 11117,   148,  5478, 10658,
       11914,  2572,   160,  6692, 11391,  2269,  8245,  4032,  6298,
        8432,  1735,  3273,  5586,  2549,  8112,  3911, 10666, 11015,
        7257,  7783, 10351,  8176, 12164,  8840, 10288,  3476,  1016,
        5534,  7945,  8401,  4331, 10695,  9251,  2991,  2112,  9546,
        4640,  6338, 10030, 10277,  5441,  8010,  8230,  9166,  4602,
       11497,   713,  6985,  5915,   570, 11139,  1448, 10977,  8826,
         985,   190,  7560,  3321])
